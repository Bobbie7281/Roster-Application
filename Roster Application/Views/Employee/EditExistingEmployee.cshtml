@model ListsModel

<div id="viewContainer">

    <div class="text-primary p-3">

        <h1 class="display-4 text-center">Edit Employee Data:</h1>
        <partial name="_Notifications" />

        <div class="mb-0 row p-3">
            <label class="p-0" style="font-size:x-large">Choose An Employee To Edit:</label>
            
                <select class="col-sm-5 p-3" style="font-size:large" name="category" id="selectEmployee">
                    <option value="" disabled selected>Choose a Employee</option> @*This will serve as a placeholder in the dropdown list*@

                @if (Model.EmployeeList != null)
                {
                    @foreach (var item in @Model.EmployeeList)
                    {
                        if (item.EmployeeName != "")
                        {
                            <option>@item.EmployeeName</option>
                        }
                    }
                }

                </select>
            </div>
        </div>

        <div class="mb-0 row p-3">
            <label class="p-0" style="font-size:x-large">Name:</label>
            <input class="col-sm-5 p-3" style="font-size:large" id="NewEmployeeName" disabled="disabled">
        </div>
        <div class="mb-0 row p-3">
            <label class="p-0" style="font-size:x-large">Surname:</label>
            <input class="col-sm-5 p-3" style="font-size:large" id="NewEmployeeSurname" disabled="disabled">
        </div>
        <div class="mb-0 row p-3">
            <label class="p-0" style="font-size:x-large">Address:</label>
            <input class="col-sm-5 p-3" style="font-size:large" id="NewAddress" disabled="disabled">
        </div>
        <div class="mb-0 row p-3">
            <label class="p-0" style="font-size:x-large">Contact Number:</label>
            <input class="col-sm-5 p-3" style="font-size:large" id="NewContact" disabled="disabled">
        </div>
        <div class="mb-0 row p-3">
            <label class="p-0" style="font-size:x-large">Email Address:</label>
            <input class="col-sm-5 p-3" p-3" style="font-size:large" id="NewEmployeeEmail" disabled="disabled">
        </div>
        <div class="mb-0 row p-3">
            <label class="p-0" style="font-size:x-large">Category:</label>
            <select class="col-sm-5 p-3" style="font-size:large" name="category" id="SelectNewCategory" disabled="disabled">
                <option value="" disabled selected>Choose a Category</option> @*This will serve as a placeholder in the dropdown list*@
            
                @if (Model.CategoryList != null)
            {
                @foreach (var item in @Model!.CategoryList)
                {
                    if (item.CategoryName != "")
                    {
                        <option>@item.CategoryName</option>
                    }
                }
            }

            </select>
        </div>
        
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-1 p-3">
                <button class="btn btn-primary btn-lg" id="Save" disabled="disabled">Save</button>
            </div>

            <div class="col-md-1 p-3">
                <form method="post" action="/Employee/EmployeeOptions">
                    <button type="submit" class="btn btn-lg btn-primary" id="back">Back</button>
                </form>
            </div>
        </div>
    </div>
@section Scripts{

    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>//The following script will execute upon selecting the emplpyee name.
        $(document).ready(function () {

            $("#selectEmployee").on("change", function () { //When a Employee name is selected

                var ids = [$("#NewEmployeeName"), $("#NewEmployeeSurname"), $("#NewAddress"), $("#NewContact"), $("#NewEmployeeEmail"), $("#SelectNewCategory")];

                var selectEmployee = $(this).find("option:selected").text(); //The Employee name will be saved in selectEmployee
                $.ajax({
                    url: "/Employee/SGetData",//SGetData is a method located in the Employee controller
                    type: "POST",//The method will be of type post ([HttpPost])
                    data: { EmployeeName: selectEmployee },//selectEmployee variable will be passed to the parameter EmployeeName of the SGetData method
                    success: function (data) {//upon return the disabled attribute will be removed for the following elements
                        
                        document.getElementById("NewEmployeeName").removeAttribute("disabled");
                        document.getElementById("NewEmployeeSurname").removeAttribute("disabled");
                        document.getElementById("NewAddress").removeAttribute("disabled");
                        document.getElementById("NewContact").removeAttribute("disabled");
                        document.getElementById("NewEmployeeEmail").removeAttribute("disabled");
                        document.getElementById("SelectNewCategory").removeAttribute("disabled");
                        document.getElementById("Save").removeAttribute("disabled");
                        console.log(data);
                        //data returned from the method will be displayed in the following input fields
                        $.each(data, function (index, element) {
                            ids[index].val(data[index]);
                            console.log(ids[index], data[index]);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.log("Ajax Error: " + status + " - " + error);
                        console.log(xhr.responseText);
                    }
                });
            });
        });
    </script>
    <script>
        //The following scipt will check that the new employee details are all entered and
        //  errors will be shown if a field is left empty.

        $(document).ready(function () {
            $("#Save").on("click", function () {//when save button is clicked update the following variables with the data of all the fields
                var selectedName = $("#selectEmployee").val();
                var name = $("#NewEmployeeName").val();
                var surname = $("#NewEmployeeSurname").val();
                var address = $("#NewAddress").val();
                var contactNumber = $("#NewContact").val();
                var emailAddress = $("#NewEmployeeEmail").val();
                var category = $("#SelectNewCategory").val();

                var message = "The folowing errors where encountered:\n\n";

                //This array contains the values of the elements used in this script.
                var employeeData = [name, surname, address, contactNumber, emailAddress, category];

                //The following array contains the id's of the elements used in this script
                var ids = [$("#NewEmployeeName"), $("#NewEmployeeSurname"), $("#NewAddress"), $("#NewContact"), $("#NewEmployeeEmail"), $("#SelectNewCategory")];

                //The following array contains the text that represents each element in the ids array.
                var elementsNames = ["Name", "Surname", "Address", "Contact Number", "Email Address", "Category"];

                $.ajax({
                    url: "/Employee/SCheckDataPriorSaving",
                    type: "POST",
                    data: { empData: employeeData },
                    success: function (data) {

                        //If the last element of the array is bigger then 0 execute the following
                        if (data[data.length - 1] != "0") {
                            //Remove the last element from data, as it only contains the total number of errors and
                            //shouldn't be included in the for each loop below.

                            data.pop();
                            //index represents the index number of the data array and the element is the data
                            $.each(data, function (index, element) {

                                //If the element in the data array is not Orange, execute the following.
                                if (element != "Green") {

                                    //the same index is used for the data array, to make reference to the id in the array ids and change it's background.
                                    ids[index].css("background-color", "Orange");

                                    //the same index is used for the elementsNames array to make reference to the name in the array and used in the message.
                                    message += elementsNames[index] + " is blank.\n";
                                }
                                else {
                                    ids[index].css("background-color", "White");
                                }

                                //If the index reached the end of the array, show the error message.
                                if (index + 1 == data.length) {
                                    alert(message += "\n Saving not possible. Correct all errors in order to save.");
                                }

                            });
                        }
                        else {//If the last element of the array is 0 execute the following

                            //console.log("Test");
                            $.ajax({
                                //call the method SSaveEmployeeDetails
                                url: "/Employee/SEditEmployeeDetails",
                                type: "POST",
                                
                                //The array employeeData will be passed to the parameter empData in the SSaveEmployeeDetails.
                                data: { selectedName: selectedName, empData: employeeData, categoryName : category},
                                success: function (response) {

                                    //if the response returned by the method is true, location.reload() will call CreateNewEmployee() method.
                                    if (response.isValid) {
                                        location.reload();
                                    }
                                }
                            });
                        }
                    }
                });
            });
        });
    </script>
    }