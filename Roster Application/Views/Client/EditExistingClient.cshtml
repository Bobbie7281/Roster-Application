@model ListsModel

<div id="viewContainer">

    <div class="text-primary p-3">

        <h1 class="display-4 text-center">Edit Client Data:</h1>
        <partial name="_Notifications" />

        <div class="mb-3 row p-3">
            <label class="p-0" style="font-size:x-large">Choose a Client to Edit:</label>
            <div class="row mb-0 p-3">
                <select class="form-select p-3" name="editClient" id="selectClient">
                    <option value="" disabled selected>Choose a client</option> @*This will serve as a placeholder in the dropdown list*@
                    @if (Model.ClientList != null)
                    {
                        @foreach (var item in @Model.ClientList)
                        {
                            if (item.ClientName != "")
                            {
                                <option>@item.ClientName</option>
                            }
                        }
                    }

                </select>
            </div>
        </div>

            <div class="mb-0 row p-6">
                <label class="p-0" style="font-size:x-large">Client Name:</label>
                <input class="mb-1 pt-4" style="font-size:large" id="NewClientName" disabled="disabled">
            </div>
            <div class="mb-0 row p-2">
                <label class="p-0" style="font-size:x-large">Address:</label>
                <input class="mb-1 pt-4" style="font-size:large" id="Address" disabled="disabled">
            </div>
            <div class="mb-0 row p-2">
                <label class="p-0" style="font-size:x-large">Contact Details:</label>
                <input class="mb-1 pt-4" style="font-size:large" id="Contact" disabled="disabled">
            </div>
            <div class="mb-0 row p-2">
                <label class="p-0" style="font-size:x-large">Schedule:</label>
            <select class="mb-1 pt-4" style="font-size:large" name="schedule" id="selectSchedule" disabled="disabled">
                <option value="" disabled selected>Choose a schedule</option> @*This will serve as a placeholder in the dropdown list*@

                @if (Model.ScheduleList != null)
                {
                    @foreach (var item in @Model.ScheduleList)
                    {
                        if (item.ScheduleName != "")
                        {
                            <option>@item.ScheduleName</option>
                        }
                    }
                }
            </select>
            </div>
            <div class="mb-0 row p-2">
                <label class="p-0" style="font-size:x-large">Category:</label>
            <select class="mb-1 pt-4" style="font-size:large" name="category" id="selectCatgory" disabled="disabled">
                <option value="" disabled selected>Choose a Category</option> @*This will serve as a placeholder in the dropdown list*@
                
                @if (Model.CategoryList != null)
                {
                    @foreach (var item in @Model.CategoryList)
                    {
                        if (item.CategoryName != "")
                        {
                            <option>@item.CategoryName</option>
                        }
                    }
                }

            </select>
            </div>
            <div class="mb-0 row p-2">
                <label class="p-0" style="font-size:x-large">Total Hours:</label>
                <input class="mb-1 pt-4" style="font-size:large" id="TotalHours" disabled="disabled">
            </div>
            <div class="mb-0 row p-2">
                <input class="mb-1 pt-4" style="font-size:large" id="copyTotalHours" hidden="hidden">
            </div>

            </div>

        <div class="container">
            <div class="row">
                <div class="col-md-1 p-3">
                    <button class="btn btn-primary btn-lg" id="save" disabled="disabled">Save</button>
                </div>

                <div class="col-md-1 p-3">
                    <form method="post" action="/Client/ClientOptions">
                        <button type="submit" class="btn btn-lg btn-primary" id="back">Back</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

@section Scripts{

    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>//The following script will execute upon selecting the client name.
        $(document).ready(function () {

            $("#selectClient").on("change", function () { //When a client name is selected 
                var selectClient = $(this).find("option:selected").text(); //The client name will be saved in selectClient

                var idsRemoveDisabledAttr = [$("#NewClientName"), $("#Address"), $("#Contact"), $("#selectSchedule"), $("#selectCatgory"), $("#save")];
                var idsUploadData = [$("#NewClientName"), $("#Address"), $("#Contact"), $("#selectSchedule"), $("#selectCatgory"), $("#TotalHours")];

                $.ajax({
                    url:"/Client/SGetData",//SGetData is a method located in the client controller 
                    type:"POST",//The method will be of type post ([HttpPost])
                    data: { clientName: selectClient },//selectClient variable will be passed to the parameter clientName of the SGetData method
                    success: function (data) {//upon return the disabled attribute will be removed for the following elements

                        $.each(idsRemoveDisabledAttr, function (index, element) {

                            $(element).removeAttr("disabled");

                        });
                        $.each(data, function (index, element) {
                            idsUploadData[index].val(data[index]);

                        });
                    },
                    error: function (xhr, status, error) {
                        console.log("Ajax Error: " + status + " - " + error);
                        console.log(xhr.responseText);
                    }
                });
            });
        });
        
    </script>
    <script> //The following script will execute when a schedule is selected
        $(document).ready(function () {
            $("#selectSchedule").on("change", function () {//When a schedule is selected 
                var selectedschedule = $(this).find("option:selected").text(); //The Schedule name will be saved in the selectedSchedule variable

                $.ajax({
                    url: "/Client/SGetTotalHours",//SGetTotalHours is a method located in the client controller.
                    type: "POST",//The method will be of type POST ([HttpPost])
                    data: { scheduleName: selectedschedule },//selectedSchedule variable will be passed to the parameter scheduleName of the SGetTotalHours method
                    success: function (data) {
                        $("#TotalHours").val(data);//The returned data will be displayed in the TotalHours element.
                    },
                });
            });
        });

    </script>
    <script>//The following script will execute when the save button is pressed.
        $(document).ready(function () {
            $("#save").click(function () {//When the save button is clicked, the following variables will take the values of their respective elements.
                var selectedName = $("#selectClient").val();
                var newName = $("#NewClientName").val();
                var address = $("#Address").val();
                var contact = $("#Contact").val();
                var schedule = $("#selectSchedule").val();
                var category = $("#selectCatgory").val();
                var totalHours = $("#TotalHours").val();
                var message = "The folowing errors where encountered:\n\n";


                $.ajax({
                    url: "/Client/SCheckDataPriorSaving",//SCheckDataPriorSaving is a method located in the client controller.
                    type: "POST",//The method will be of type post. 
                    //All the varibles will be passed to the parameters of the SCheckDataPriorSaving method
                    data: { editingCurrentClient: true, selectedName: selectedName, clientName: newName, address: address, contactNum: contact, schedule: schedule, category: category, totalHours: totalHours },
                    success: function (data) {

                        if (data[5] == 0)//data at location 6 stores the amount of errors encountered while checking the data. If the amount is 0, execute the following code and save.
                        {
                            $.ajax({
                                url: "/Client/SEditClient",
                                type: "POST",
                                data: { selectedName: selectedName, newClientName: newName, address: address, contact: contact, schedule: schedule, category: category, totalHours: totalHours },
                                success: function (response) {
                                    if (response.isValid) {
                                        console.log(response);
                                        location.reload();//This will refresh the page 
                                        
                                    }
                                }
                            });
                        }
                        else {
                            //The elements that encountered an error will have their background colour changed to Orange and an alert message will be displayed.

                            if (data[0] == "Orange") { $("#NewClientName").css("background-color", "orange"); message += "-Client Name, either exists or blank or not in the correct format.\n"; }
                            else { $("#NewClientName").css("background-color", "white"); }
                            if (data[1] == "Orange") { $("#Address").css("background-color", "orange"); message += "-Address is either blank or not in the correct format.\n"; }
                            else { $("#Address").css("background-color", "white"); }
                            if (data[2] == "Orange") { $("#Contact").css("background-color", "orange"); message += "-Contact Details are either blank or not in the correct format.\n"; }
                            else { $("#Contact").css("background-color", "white"); }
                            if (data[3] == "Orange") { $("#selectSchedule").css("background-color", "orange"); message += "-Selected Schedule is either blank or not in the correct format.\n"; }
                            else { $("#selectSchedule").css("background-color", "white"); }
                            if (data[4] == "Orange") { $("#selectCatgory").css("background-color", "orange"); message += "-Selected Category is either blank or not in the correct format.\n"; }
                            else { $("#selectCatgory").css("background-color", "white"); }
                            if (data[5] == "Orange") { $("#TotalHours").css("background-color", "orange"); message += "-Total Hours are either blank or not in the correct format.\n"; }
                            else { $("#TotalHours").css("background-color", "white"); }

                            alert(message += "\n Saving not possible. Correct all errors in order to save.");
                        }
                    }
                });
            });
        });
    </script>
    }